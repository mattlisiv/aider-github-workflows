name: PR Review to Update PR

on:
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

jobs:
  update-pr-from-review:
    if: github.event.pull_request_review.state == 'approved' || github.event.comment.body.contains('change')
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Extract Review Comments
        uses: actions/github-script@v7
        id: extract_comments
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;

            // Get all review comments
            const reviewComments = await github.rest.pulls.listReviewComments({
              owner,
              repo,
              pull_number: prNumber,
              per_page: 100
            });

            const comments = reviewComments.data.map(comment => ({
              file: comment.path,
              line: comment.original_line,
              body: comment.body.replace(/"/g, "'").replace(/`/g, '\\`'),
            }));

            console.log(`Extracted ${comments.length} comments`);
            return JSON.stringify(comments);

      - name: Create prompt from comments
        uses: actions/github-script@v7
        id: create_prompt
        with:
          script: |
            const comments = JSON.parse(`"${{ steps.extract_comments.outputs.result }}"`);
            let prompt = "Apply the following code changes based on the review comments:\n";
            comments.forEach(comment => {
              prompt += `File: ${comment.file}, Line: ${comment.line}, Comment: ${comment.body}\n`;
            });
            console.log(prompt);
            return prompt;

      - name: Apply changes with Aider or AI tool
        uses: mirrajabi/aider-github-action@main
        timeout-minutes: 15
        with:
          branch: ${{ github.event.pull_request.head.ref }}
          model: gpt-4-1106-preview
          aider_args: '--yes --message "${{ steps.create_prompt.outputs.result }}"'
          openai_api_key: ${{ secrets.openai_api_key }}

      - name: Push changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git push origin ${{ github.event.pull_request.head.ref }}

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { owner, repo } = context.repo;
            const prNumber = context.payload.pull_request.number;

            await github.rest.issues.createComment({
              owner,
              repo,
              issue_number: prNumber,
              body: "Changes applied based on the review comments."
            });
